"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _loglevel = _interopRequireDefault(require("loglevel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var LecClient =
/*#__PURE__*/
function () {
  function LecClient(apiClient) {
    _classCallCheck(this, LecClient);

    this.log = _loglevel["default"];
    this.apiClient = apiClient; // Create an alias to the apiClient's callApi

    this.callApi = this.apiClient.callApi.bind(this.apiClient);
  }

  _createClass(LecClient, [{
    key: "getLastEvents",
    value: function getLastEvents(type, id) {
      this.log.debug("[ApiClient] getLastEvents() - event cache");
      return this.callApi('GET', 200, true, ["device", "types", type, "devices", id, "events"], null);
    }
  }, {
    key: "getLastEventsByEventType",
    value: function getLastEventsByEventType(type, id, eventType) {
      this.log.debug("[ApiClient] getLastEventsByEventType() - event cache");
      return this.callApi('GET', 200, true, ["device", "types", type, "devices", id, "events", eventType], null);
    }
  }]);

  return LecClient;
}();

exports["default"] = LecClient;
;